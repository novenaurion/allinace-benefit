{"ast":null,"code":"var _jsxFileName = \"/home/ram/Desktop/Alliance(HRMS)/Frontend/src/components/Benefits/CustomFileInput.js\";\n\n/*\n* Custom File Input\n*\n* This Component Is Only For Good Look Of Input Type Files.\n* Visit github page for documentation and usages\n*\n* @author RTDev\n*\n* @version 0.1.0\n*\n*\n*/\nimport React, { Component } from 'react';\nconst customFile = {\n  position: 'relative',\n  cursor: 'pointer'\n};\nconst customFileInputContainer = {\n  width: '100%',\n  display: 'block',\n  border: '1px solid #e5e6e7',\n  borderRadius: '1px',\n  outline: 'none',\n  padding: '8px 12px'\n};\nconst customFileInput = {\n  width: '0',\n  height: '0',\n  opacity: '0'\n};\nconst customFileLabel = {\n  position: 'absolute',\n  right: '0',\n  color: '#495057',\n  background: '#e9ecef',\n  border: '1px solid #ced4da',\n  borderRadius: '2px',\n  padding: '9px 13px',\n  textAlign: 'center',\n  cursor: 'pointer'\n};\nconst placeHolder = {\n  color: '#999',\n  fontSize: '14px',\n  lineHeight: '1.428'\n};\n\nclass CustomFileInput extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    let localDocument = document;\n\n    if (this.props.btnBg) {\n      localDocument.querySelector('.customFileLabel').style.backgroundColor = this.props.btnBg;\n    }\n\n    if (this.props.btnColor) {\n      localDocument.querySelector('.customFileLabel').style.color = this.props.btnColor;\n    }\n\n    if (this.props.isMultiple === \"true\") {\n      localDocument.querySelector('.customFileInput').setAttribute('multiple', 'multiple');\n    } //when the input was clicked open the file select box\n\n\n    localDocument.querySelector('.customFile').onclick = function () {\n      localDocument.querySelector('.customFileInput').click();\n    }; //show file name when file is select\n\n\n    localDocument.querySelector('.customFileInput').onchange = function () {\n      let fileName = this.value.split(\"\\\\\").pop();\n      let defaultName = localDocument.querySelector('.placeHolder').innerHTML;\n\n      if (fileName != \"\") {\n        localDocument.querySelector('.placeHolder').innerHTML = fileName;\n      } else {\n        localDocument.querySelector('.placeHolder').innerHTML = defaultName;\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: customFile,\n      className: \"customFile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: customFileLabel,\n      className: \"customFileLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.buttonName ? this.props.buttonName : 'Browse'), React.createElement(\"div\", {\n      style: customFileInputContainer,\n      className: \"customFileInputContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"placeHolder\",\n      style: placeHolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.props.value ? this.props.value : 'Choose Files'), React.createElement(\"input\", {\n      type: \"file\",\n      style: customFileInput,\n      className: \"customFileInput\",\n      onChange: this.props.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CustomFileInput;","map":{"version":3,"sources":["/home/ram/Desktop/Alliance(HRMS)/Frontend/src/components/Benefits/CustomFileInput.js"],"names":["React","Component","customFile","position","cursor","customFileInputContainer","width","display","border","borderRadius","outline","padding","customFileInput","height","opacity","customFileLabel","right","color","background","textAlign","placeHolder","fontSize","lineHeight","CustomFileInput","constructor","props","componentDidMount","localDocument","document","btnBg","querySelector","style","backgroundColor","btnColor","isMultiple","setAttribute","onclick","click","onchange","fileName","value","split","pop","defaultName","innerHTML","render","buttonName","onChange"],"mappings":";;AAAA;;;;;;;;;;;;AAYA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,MAAMC,UAAU,GAAG;AAClBC,EAAAA,QAAQ,EAAE,UADQ;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAnB;AAKA,MAAMC,wBAAwB,GAAG;AAChCC,EAAAA,KAAK,EAAE,MADyB;AAEhCC,EAAAA,OAAO,EAAE,OAFuB;AAGhCC,EAAAA,MAAM,EAAE,mBAHwB;AAIhCC,EAAAA,YAAY,EAAE,KAJkB;AAKhCC,EAAAA,OAAO,EAAE,MALuB;AAMhCC,EAAAA,OAAO,EAAE;AANuB,CAAjC;AASA,MAAMC,eAAe,GAAG;AACvBN,EAAAA,KAAK,EAAC,GADiB;AAEvBO,EAAAA,MAAM,EAAC,GAFgB;AAGvBC,EAAAA,OAAO,EAAE;AAHc,CAAxB;AAMA,MAAMC,eAAe,GAAG;AACvBZ,EAAAA,QAAQ,EAAE,UADa;AAEvBa,EAAAA,KAAK,EAAE,GAFgB;AAGvBC,EAAAA,KAAK,EAAE,SAHgB;AAIvBC,EAAAA,UAAU,EAAE,SAJW;AAKvBV,EAAAA,MAAM,EAAE,mBALe;AAMvBC,EAAAA,YAAY,EAAE,KANS;AAOvBE,EAAAA,OAAO,EAAE,UAPc;AAQvBQ,EAAAA,SAAS,EAAE,QARY;AASvBf,EAAAA,MAAM,EAAE;AATe,CAAxB;AAYA,MAAMgB,WAAW,GAAG;AACnBH,EAAAA,KAAK,EAAE,MADY;AAEnBI,EAAAA,QAAQ,EAAE,MAFS;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAApB;;AAMA,MAAMC,eAAN,SAA8BtB,SAA9B,CAAwC;AACvCuB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,QAAIC,aAAa,GAAGC,QAApB;;AAEA,QAAG,KAAKH,KAAL,CAAWI,KAAd,EAAqB;AACpBF,MAAAA,aAAa,CAACG,aAAd,CAA4B,kBAA5B,EAAgDC,KAAhD,CAAsDC,eAAtD,GAAwE,KAAKP,KAAL,CAAWI,KAAnF;AACA;;AAED,QAAG,KAAKJ,KAAL,CAAWQ,QAAd,EAAwB;AACvBN,MAAAA,aAAa,CAACG,aAAd,CAA4B,kBAA5B,EAAgDC,KAAhD,CAAsDd,KAAtD,GAA8D,KAAKQ,KAAL,CAAWQ,QAAzE;AACA;;AAED,QAAG,KAAKR,KAAL,CAAWS,UAAX,KAA0B,MAA7B,EAAqC;AACpCP,MAAAA,aAAa,CAACG,aAAd,CAA4B,kBAA5B,EAAgDK,YAAhD,CAA6D,UAA7D,EAAyE,UAAzE;AACA,KAbkB,CAgBnB;;;AACAR,IAAAA,aAAa,CAACG,aAAd,CAA4B,aAA5B,EAA2CM,OAA3C,GAAqD,YAAW;AAC/DT,MAAAA,aAAa,CAACG,aAAd,CAA4B,kBAA5B,EAAgDO,KAAhD;AACA,KAFD,CAjBmB,CAqBnB;;;AACAV,IAAAA,aAAa,CAACG,aAAd,CAA4B,kBAA5B,EAAgDQ,QAAhD,GAA2D,YAAW;AACrE,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiB,IAAjB,EAAuBC,GAAvB,EAAf;AACA,UAAIC,WAAW,GAAGhB,aAAa,CAACG,aAAd,CAA4B,cAA5B,EAA4Cc,SAA9D;;AAEA,UAAGL,QAAQ,IAAI,EAAf,EAAmB;AAClBZ,QAAAA,aAAa,CAACG,aAAd,CAA4B,cAA5B,EAA4Cc,SAA5C,GAAwDL,QAAxD;AACA,OAFD,MAEO;AACNZ,QAAAA,aAAa,CAACG,aAAd,CAA4B,cAA5B,EAA4Cc,SAA5C,GAAwDD,WAAxD;AAEA;AACD,KAVD;AAaA;;AAEDE,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,KAAK,EAAI3C,UAAd;AAA0B,MAAA,SAAS,EAAC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,KAAK,EAAIa,eAAf;AAAgC,MAAA,SAAS,EAAC,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6D,KAAKU,KAAL,CAAWqB,UAAX,GAAwB,KAAKrB,KAAL,CAAWqB,UAAnC,GAAgD,QAA7G,CADD,EAGC;AAAK,MAAA,KAAK,EAAIzC,wBAAd;AAAwC,MAAA,SAAS,EAAC,0BAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,KAAK,EAAEe,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKK,KAAL,CAAWe,KAAZ,GAAqB,KAAKf,KAAL,CAAWe,KAAhC,GAAwC,cAF1C,CADD,EAMC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,KAAK,EAAI5B,eAFV;AAGC,MAAA,SAAS,EAAC,iBAHX;AAIC,MAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWsB,QAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CAHD,CADD;AAoBA;;AA/DsC;;AAkExC,eAAexB,eAAf","sourcesContent":["/*\n* Custom File Input\n*\n* This Component Is Only For Good Look Of Input Type Files.\n* Visit github page for documentation and usages\n*\n* @author RTDev\n*\n* @version 0.1.0\n*\n*\n*/\nimport React, {Component} from 'react';\n\nconst customFile = {\n\tposition: 'relative',\n\tcursor: 'pointer'\n};\n\t\t\nconst customFileInputContainer = {\n\twidth: '100%',\n\tdisplay: 'block',\n\tborder: '1px solid #e5e6e7',\n\tborderRadius: '1px',\n\toutline: 'none',\n\tpadding: '8px 12px'\n};\n\nconst customFileInput = {\n\twidth:'0',\n\theight:'0',\n\topacity: '0'\n};\n\nconst customFileLabel = {\n\tposition: 'absolute',\n\tright: '0',\n\tcolor: '#495057',\n\tbackground: '#e9ecef',\n\tborder: '1px solid #ced4da',\n\tborderRadius: '2px',\n\tpadding: '9px 13px',\n\ttextAlign: 'center',\n\tcursor: 'pointer'\n};\n\nconst placeHolder = {\n\tcolor: '#999',\n\tfontSize: '14px',\n\tlineHeight: '1.428'\n};\n\nclass CustomFileInput extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\tlet localDocument = document;\n\n\t\tif(this.props.btnBg) {\n\t\t\tlocalDocument.querySelector('.customFileLabel').style.backgroundColor = this.props.btnBg;\n\t\t}\n\n\t\tif(this.props.btnColor) {\n\t\t\tlocalDocument.querySelector('.customFileLabel').style.color = this.props.btnColor;\n\t\t}\n\n\t\tif(this.props.isMultiple === \"true\") {\n\t\t\tlocalDocument.querySelector('.customFileInput').setAttribute('multiple', 'multiple');\n\t\t}\n\n\n\t\t//when the input was clicked open the file select box\n\t\tlocalDocument.querySelector('.customFile').onclick = function() {\n\t\t\tlocalDocument.querySelector('.customFileInput').click();\n\t\t};\n\n\t\t//show file name when file is select\n\t\tlocalDocument.querySelector('.customFileInput').onchange = function() {\n\t\t\tlet fileName = this.value.split(\"\\\\\").pop();\n\t\t\tlet defaultName = localDocument.querySelector('.placeHolder').innerHTML;\n\n\t\t\tif(fileName != \"\") {\n\t\t\t\tlocalDocument.querySelector('.placeHolder').innerHTML = fileName;\n\t\t\t} else {\n\t\t\t\tlocalDocument.querySelector('.placeHolder').innerHTML = defaultName;\n\n\t\t\t}\n\t\t}\n\n\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div style = {customFile} className=\"customFile\">\n\t\t\t\t<span style = {customFileLabel} className=\"customFileLabel\">{this.props.buttonName ? this.props.buttonName : 'Browse'}</span>\n\n\t\t\t\t<div style = {customFileInputContainer} className=\"customFileInputContainer\">\n\t\t\t\t\t<span className=\"placeHolder\" style={placeHolder}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t(this.props.value) ? this.props.value : 'Choose Files'\n\t\t\t\t\t\t}\n\t\t\t\t\t</span>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tstyle = {customFileInput}\n\t\t\t\t\t\tclassName=\"customFileInput\"\n\t\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CustomFileInput;"]},"metadata":{},"sourceType":"module"}